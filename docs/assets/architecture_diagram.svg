<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 800">
  <style>
    /* Modern fonts and styles with consistent sizing */
    .title { font: bold 28px 'Arial', sans-serif; fill: #2c3e50; }
    .subtitle { font: bold 20px 'Arial', sans-serif; fill: #34495e; }
    .section-title { font: bold 18px 'Arial', sans-serif; fill: #7f8c8d; }
    .label { font: 16px 'Arial', sans-serif; fill: #2c3e50; }
    .small-label { font: 13px 'Arial', sans-serif; fill: #5d6d7e; }
    .details { font: 11px 'Arial', sans-serif; fill: #7f8c8d; }
    .flow-label { font: italic 12px 'Arial', sans-serif; fill: #7f8c8d; }
    
    /* Modern box styles with shadow effects */
    .box { fill: #fff; stroke: #bdc3c7; stroke-width: 2; rx: 8; ry: 8; }
    .frontend-box { fill: #e1f5fe; stroke: #4fc3f7; stroke-width: 2; rx: 10; ry: 10; filter: url(#shadow); }
    .backend-box { fill: #e8f5e9; stroke: #81c784; stroke-width: 2; rx: 10; ry: 10; filter: url(#shadow); }
    .database-box { fill: #fff8e1; stroke: #ffd54f; stroke-width: 2; rx: 10; ry: 10; filter: url(#shadow); }
    .socket-box { fill: #ffebee; stroke: #ef9a9a; stroke-width: 2; rx: 10; ry: 10; filter: url(#shadow); }
    .component-box { fill: #fafafa; stroke: #e0e0e0; stroke-width: 1.5; rx: 6; ry: 6; }
    
    /* Flow arrow styles */
    .arrow { stroke: #95a5a6; stroke-width: 2.5; marker-end: url(#arrowhead); }
    .dashed-arrow { stroke: #95a5a6; stroke-width: 2; stroke-dasharray: 6,4; marker-end: url(#arrowhead); }
    
    /* Different flow colors */
    .init-path { fill: none; stroke: #4fc3f7; stroke-width: 3; stroke-linecap: round; stroke-linejoin: round; filter: url(#glow-blue); }
    .flow-path { fill: none; stroke: #81c784; stroke-width: 3; stroke-linecap: round; stroke-linejoin: round; filter: url(#glow-green); }
    .attack-path { fill: none; stroke: #ef9a9a; stroke-width: 3; stroke-linecap: round; stroke-linejoin: round; filter: url(#glow-red); }
    
    /* Legend items */
    .legend-item { font: 13px 'Arial', sans-serif; fill: #7f8c8d; }
  </style>
  
  <!-- Filter definitions -->
  <defs>
    <!-- Shadow effect -->
    <filter id="shadow" x="-10%" y="-10%" width="120%" height="120%">
      <feDropShadow dx="2" dy="2" stdDeviation="3" flood-color="#00000033" />
    </filter>
    
    <!-- Glow effect - Blue -->
    <filter id="glow-blue" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur stdDeviation="2" result="blur" />
      <feFlood flood-color="#4fc3f7" flood-opacity="0.3" result="color" />
      <feComposite in="color" in2="blur" operator="in" result="glow" />
      <feMerge>
        <feMergeNode in="glow" />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
    
    <!-- Glow effect - Green -->
    <filter id="glow-green" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur stdDeviation="2" result="blur" />
      <feFlood flood-color="#81c784" flood-opacity="0.3" result="color" />
      <feComposite in="color" in2="blur" operator="in" result="glow" />
      <feMerge>
        <feMergeNode in="glow" />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
    
    <!-- Glow effect - Red -->
    <filter id="glow-red" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur stdDeviation="2" result="blur" />
      <feFlood flood-color="#ef9a9a" flood-opacity="0.3" result="color" />
      <feComposite in="color" in2="blur" operator="in" result="glow" />
      <feMerge>
        <feMergeNode in="glow" />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
    
    <!-- Arrow marker -->
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#95a5a6" />
    </marker>
    
    <!-- Blue arrow marker -->
    <marker id="blue-arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#4fc3f7" />
    </marker>
    
    <!-- Green arrow marker -->
    <marker id="green-arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#81c784" />
    </marker>
    
    <!-- Red arrow marker -->
    <marker id="red-arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#ef9a9a" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="500" y="40" class="title" text-anchor="middle">Glucose Simulation Platform Architecture</text>
  
  <!-- Frontend Section -->
  <rect x="80" y="70" width="840" height="160" class="frontend-box" />
  <text x="130" y="95" class="subtitle">Frontend Layer</text>
  
  <!-- Frontend Components -->
  <rect x="110" y="110" width="240" height="100" class="component-box" />
  <text x="230" y="130" class="label" text-anchor="middle">Dashboard UI</text>
  <text x="230" y="155" class="small-label" text-anchor="middle">- Patient Data Display</text>
  <text x="230" y="175" class="small-label" text-anchor="middle">- Glucose Charts</text>
  <text x="230" y="195" class="small-label" text-anchor="middle">- Data Analytics</text>
  
  <rect x="380" y="110" width="240" height="100" class="component-box" />
  <text x="500" y="130" class="label" text-anchor="middle">Control Module</text>
  <text x="500" y="155" class="small-label" text-anchor="middle">- Patient Selection</text>
  <text x="500" y="175" class="small-label" text-anchor="middle">- Real-time Monitoring</text>
  <text x="500" y="195" class="small-label" text-anchor="middle">- Simulation Controls</text>
  
  <rect x="650" y="110" width="240" height="100" class="component-box" />
  <text x="770" y="130" class="label" text-anchor="middle">Data Visualization</text>
  <text x="770" y="155" class="small-label" text-anchor="middle">- Trend Analysis</text>
  <text x="770" y="175" class="small-label" text-anchor="middle">- Alert Monitoring</text>
  <text x="770" y="195" class="small-label" text-anchor="middle">- Interactive Charts</text>
  
  <!-- Communication Layer with WebSocket details -->
  <rect x="80" y="250" width="840" height="60" class="socket-box" />
  <text x="500" y="285" class="subtitle" text-anchor="middle">WebSocket Communication (connect, subscribe, glucose_update)</text>
  
  <!-- Backend Section -->
  <rect x="80" y="330" width="840" height="330" class="backend-box" />
  <text x="130" y="355" class="subtitle">Backend Layer</text>
  
  <!-- Backend Components - API Layer with more details -->
  <rect x="110" y="370" width="780" height="90" class="component-box" />
  <text x="500" y="390" class="section-title" text-anchor="middle">API Gateway</text>
  
  <rect x="130" y="410" width="230" height="35" class="box" />
  <text x="245" y="425" class="small-label" text-anchor="middle">Patient API</text>
  <text x="245" y="440" class="details" text-anchor="middle">/patients, /patient/:id, /patient_types</text>
  
  <rect x="380" y="410" width="230" height="35" class="box" />
  <text x="495" y="425" class="small-label" text-anchor="middle">Glucose API</text>
  <text x="495" y="440" class="details" text-anchor="middle">/glucose/:id, /initialize_patient_data/:id</text>
  
  <rect x="630" y="410" width="230" height="35" class="box" />
  <text x="745" y="425" class="small-label" text-anchor="middle">Simulation API</text>
  <text x="745" y="440" class="details" text-anchor="middle">/start_data_flow/:id, /stop_data_flow/:id</text>
  
  <!-- Backend Components - Service Layer with details -->
  <rect x="110" y="470" width="780" height="90" class="component-box" />
  <text x="500" y="490" class="section-title" text-anchor="middle">Service Layer</text>
  
  <rect x="130" y="510" width="230" height="35" class="box" />
  <text x="245" y="525" class="small-label" text-anchor="middle">Patient Service</text>
  <text x="245" y="540" class="details" text-anchor="middle">get_patient(), load_patient_csv()</text>
  
  <rect x="380" y="510" width="230" height="35" class="box" />
  <text x="495" y="525" class="small-label" text-anchor="middle">Glucose Service</text>
  <text x="495" y="540" class="details" text-anchor="middle">get_glucose_readings(), initialize_patient_data()</text>
  
  <rect x="630" y="510" width="230" height="35" class="box" />
  <text x="745" y="525" class="small-label" text-anchor="middle">Simulation Service</text>
  <text x="745" y="540" class="details" text-anchor="middle">start_data_flow(), generate_new_reading()</text>
  
  <!-- Backend Components - Data Processing with details -->
  <rect x="110" y="570" width="780" height="80" class="component-box" />
  <text x="500" y="590" class="section-title" text-anchor="middle">Data Processing</text>
  
  <rect x="130" y="610" width="230" height="25" class="box" style="fill: #e1f5fe;" />
  <text x="245" y="626" class="details" text-anchor="middle">24h Historical Data Generation</text>
  
  <rect x="380" y="610" width="230" height="25" class="box" style="fill: #e8f5e9;" />
  <text x="495" y="626" class="details" text-anchor="middle">5-Second Interval Updates</text>
  
  <rect x="630" y="610" width="230" height="25" class="box" style="fill: #ffebee;" />
  <text x="745" y="626" class="details" text-anchor="middle">Anomalous Reading Simulation</text>
  
  <!-- Database Layer with table details -->
  <rect x="80" y="680" width="840" height="85" class="database-box" />
  <text x="130" y="705" class="subtitle">Data Storage (SQLite)</text>
  
  <rect x="200" y="715" width="250" height="40" class="box" />
  <text x="315" y="730" class="small-label" text-anchor="middle">Patient Table</text>
  <text x="315" y="745" class="details" text-anchor="middle">id, age, weight, height, has_diabetes</text>
  
  <rect x="550" y="715" width="250" height="40" class="box" />
  <text x="675" y="730" class="small-label" text-anchor="middle">Glucose_Reading Table</text>
  <text x="675" y="745" class="details" text-anchor="middle">id, patient_id, glucose, timestamp</text>
</svg>